public abstract class com/arkivanov/essenty/backhandler/BackCallback {
	public static final field Companion Lcom/arkivanov/essenty/backhandler/BackCallback$Companion;
	public static final field PRIORITY_DEFAULT I
	public static final field PRIORITY_MAX I
	public static final field PRIORITY_MIN I
	public fun <init> ()V
	public fun <init> (ZI)V
	public synthetic fun <init> (ZIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addEnabledChangedListener (Lkotlin/jvm/functions/Function1;)V
	public final fun getPriority ()I
	public final fun isEnabled ()Z
	public abstract fun onBack ()V
	public fun onBackCancelled ()V
	public fun onBackProgressed (Lcom/arkivanov/essenty/backhandler/BackEvent;)V
	public fun onBackStarted (Lcom/arkivanov/essenty/backhandler/BackEvent;)V
	public final fun removeEnabledChangedListener (Lkotlin/jvm/functions/Function1;)V
	public final fun setEnabled (Z)V
	public final fun setPriority (I)V
}

public final class com/arkivanov/essenty/backhandler/BackCallback$Companion {
}

public final class com/arkivanov/essenty/backhandler/BackCallbackKt {
	public static final fun BackCallback (ZILkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lcom/arkivanov/essenty/backhandler/BackCallback;
	public static synthetic fun BackCallback$default (ZILkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lcom/arkivanov/essenty/backhandler/BackCallback;
}

public abstract interface class com/arkivanov/essenty/backhandler/BackDispatcher : com/arkivanov/essenty/backhandler/BackHandler {
	public abstract fun addEnabledChangedListener (Lkotlin/jvm/functions/Function1;)V
	public abstract fun back ()Z
	public abstract fun cancelPredictiveBack ()V
	public abstract fun isEnabled ()Z
	public abstract fun progressPredictiveBack (Lcom/arkivanov/essenty/backhandler/BackEvent;)V
	public abstract fun removeEnabledChangedListener (Lkotlin/jvm/functions/Function1;)V
	public abstract fun startPredictiveBack (Lcom/arkivanov/essenty/backhandler/BackEvent;)Z
}

public final class com/arkivanov/essenty/backhandler/BackDispatcherKt {
	public static final fun BackDispatcher ()Lcom/arkivanov/essenty/backhandler/BackDispatcher;
}

public final class com/arkivanov/essenty/backhandler/BackEvent {
	public fun <init> ()V
	public fun <init> (FLcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;FF)V
	public synthetic fun <init> (FLcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;FFILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2 ()Lcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun copy (FLcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;FF)Lcom/arkivanov/essenty/backhandler/BackEvent;
	public static synthetic fun copy$default (Lcom/arkivanov/essenty/backhandler/BackEvent;FLcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;FFILjava/lang/Object;)Lcom/arkivanov/essenty/backhandler/BackEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getProgress ()F
	public final fun getSwipeEdge ()Lcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;
	public final fun getTouchX ()F
	public final fun getTouchY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/arkivanov/essenty/backhandler/BackEvent$SwipeEdge : java/lang/Enum {
	public static final field LEFT Lcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;
	public static final field RIGHT Lcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;
	public static final field UNKNOWN Lcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;
	public static fun values ()[Lcom/arkivanov/essenty/backhandler/BackEvent$SwipeEdge;
}

public abstract interface class com/arkivanov/essenty/backhandler/BackHandler {
	public abstract fun isRegistered (Lcom/arkivanov/essenty/backhandler/BackCallback;)Z
	public abstract fun register (Lcom/arkivanov/essenty/backhandler/BackCallback;)V
	public abstract fun unregister (Lcom/arkivanov/essenty/backhandler/BackCallback;)V
}

public abstract interface class com/arkivanov/essenty/backhandler/BackHandlerOwner {
	public abstract fun getBackHandler ()Lcom/arkivanov/essenty/backhandler/BackHandler;
}

